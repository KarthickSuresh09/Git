There is a three types of git reset
* soft reset
* mixed reset
* Hard reset

                                                          Git RESET
                                                              |
                                                              |
                             _____________________________________________________________________       
                            |                                 |                                   |
                            |                                 |                                   |
                        Soft reset                       Mixed reset                          Hard reset



Git’s reset command is powerful for undoing changes in your working directory and repository. 
It can be used in different ways depending on the “mode” you choose: --soft, --mixed, or --hard.


git reset --soft: Moves the HEAD pointer, keeps changes staged.
Use Case: --soft is helpful if you want to edit the previous commit or re-commit it with a different message.


git reset --mixed: Moves the HEAD pointer, removes changes from staging but keeps them in the working directory.
Use Case: --mixed is useful if you want to keep changes in your working directory but decide not to stage or commit them.


git reset --hard: Moves the HEAD pointer and discards changes from both staging and working directory.
Use Case: --hard is best used when you want to discard all changes and reset your project to a previous commit.


Summary:
-----------
git reset --soft: Moves the HEAD pointer, keeps changes staged.
git reset --mixed: Moves the HEAD pointer, removes changes from staging but keeps them in the working directory.
git reset --hard: Moves the HEAD pointer and discards changes from both staging and working directory.


Command:
SOFT:
git reset --soft HEAD~1
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   example.txt

MIXED:
git reset --mixed HEAD~1
Unstaged changes after reset:
M       example.txt
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   example.txt

HARD:
git reset --Hard HEAD~1  OR git reset --hard "commit ID" ====> it will work after this commit everything will gone
HEAD is now at fe9d695 more NEW content
On branch master
nothing to commit, working tree clean
